#summary get familiar with the development environment
#labels Phase-Implementation

The source pages have instructions how to check out the code with SubVersion. Developers may use any IDE or whatever they are comfortable with. At least [http://www.eclipse.org/ Eclipse] has a simple way to import existing [http://maven.apache.org/guides/introduction/introduction-to-the-standard-directory-layout.html Maven] projects.


To become a project member or start contributing:
 * Drop a line or post patches on the issues pages. The [http://code.google.com/p/bobbinwork/issues/list?can=2&q=label%3Anewbee&sort=priority&colspec=ID+Type+Status+Priority+Milestone+Owner+Summary&cells=tiles issues labeled newbee] are good starting points for developers new to the project.
 * Browse the sources online to add review comments and/or questions.
 
== Project structure ==

Standard for [http://subversion.tigris.org subversion] projects are `trunk`, `branches` and `tags`, googlecode adds a standard `wiki`, below an overview of the project specific structure

|| <pre>trunk/src/</pre> || has the usual maven structure. Executable main classes are: <br>`nl.BobbinWork.diagram.gui.BwDiagrams`<br> `nl.BobbinWork.grids.GridGUI.PolarGridPrinter` ||
|| `trunk/doc` || documentation that should have the code license, not the wiki license.<br> The `ModelObjects` gives a birds-eye overview of the interaction between the most important objects in the 3 most important packages. The `classTree` is not entirely accurate but it fits on one sheet, the alternative is the javadoc [http://bobbinwork.googlecode.com/svn/generated/api/nl/BobbinWork/diagram/model/package-tree.html package tree] and perhaps the class outline views of eclipse, way too much for one sheet. See also the [http://bobbinwork.googlecode.com/svn/generated/api/overview-tree.html tree] for all packages and the [http://bobbinwork.googlecode.com/svn/trunk/src/main/resources/nl/BobbinWork/diagram/xml/package.html basic stitches]. ||
|| `wiki/diagrams` || xml files, used by `ValidationTest`.<br>Input for the application, therefore under the wiki license. See LicenceIssues ||
|| `wiki/images` || images on the wiki page ||
|| `generated/api` ||  javadoc, used to be generated by Ant's `build.xml`, TODO replace by some MAVEN goal ||
|| `dev-utils` || legacy from the Ant period. Copies of third party software used by `build.xml` ||